{"remainingRequest":"D:\\downloads\\UNIQ\\Gui\\node_modules\\babel-loader\\lib\\index.js!D:\\downloads\\UNIQ\\Gui\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\downloads\\UNIQ\\Gui\\src\\store\\minigames\\metalPlant\\Element.js","dependencies":[{"path":"D:\\downloads\\UNIQ\\Gui\\src\\store\\minigames\\metalPlant\\Element.js","mtime":1635949910590},{"path":"D:\\downloads\\UNIQ\\Gui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1685190017390},{"path":"D:\\downloads\\UNIQ\\Gui\\node_modules\\babel-loader\\lib\\index.js","mtime":1685190019507},{"path":"D:\\downloads\\UNIQ\\Gui\\node_modules\\eslint-loader\\index.js","mtime":1685190018634}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLnRvLWZpeGVkIjsKaW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICJEOi9kb3dubG9hZHMvVU5JUS9HdWkvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICJEOi9kb3dubG9hZHMvVU5JUS9HdWkvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzIjsKdmFyIHZhbGlkSW1ncyA9IFsiZWNvIiwgInJlY3ljbGUiLCAiYXRvbSJdOwp2YXIgaW52YWxpZEltZ3MgPSBbImJpb2hhemFyZCIsICJyYWRpYXRpb24iLCAicGV0ZSIsICJkYW5nZXIiXTsKdmFyIHRlbXBJbWcgPSAidGhlcm1vbWV0ZXIiOwp2YXIgYmdCeVR5cGUgPSB7CiAgInZhbGlkIjogImdyZWVuX2JnIiwKICAiaW52YWxpZCI6ICJyZWRfYmciLAogICJ0ZW1wVXAiOiAiZ3JlZW5fYmdfdCIsCiAgInRlbXBEb3duIjogInJlZF9iZ190Igp9OwoKdmFyIEVsZW1lbnQgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIGZ1bmN0aW9uIEVsZW1lbnQodHlwZSkgewogICAgdmFyIHNjYWxlID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiAtMTsKICAgIHZhciB2YXJpYW50ID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgYXJndW1lbnRzWzJdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMl0gOiAtMTsKCiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgRWxlbWVudCk7CgogICAgdGhpcy50eXBlID0gdHlwZTsKICAgIHRoaXMuc2NhbGUgPSBzY2FsZSA8IDAgPyBNYXRoLm1heCguNzUsIE1hdGgucmFuZG9tKCkgKiAxLjUpLnRvRml4ZWQoMikgOiBzY2FsZTsKICAgIHRoaXMuYmcgPSAiL2ltZy9taW5pR2FtZXMvbWV0YWxQbGFudC9lbGVtZW50cy8iLmNvbmNhdChiZ0J5VHlwZVt0eXBlXSwgIi5zdmciKTsKICAgIGlmICh0aGlzLnR5cGUgPT09ICJ0ZW1wVXAiIHx8IHRoaXMudHlwZSA9PT0gInRlbXBEb3duIikgdGhpcy5pbWcgPSAiL2ltZy9taW5pR2FtZXMvbWV0YWxQbGFudC9lbGVtZW50cy8iLmNvbmNhdCh0ZW1wSW1nLCAiLnN2ZyIpO2Vsc2UgewogICAgICBpZiAodGhpcy50eXBlID09PSAidmFsaWQiKSB0aGlzLmltZyA9ICIvaW1nL21pbmlHYW1lcy9tZXRhbFBsYW50L2VsZW1lbnRzLyIuY29uY2F0KHZhbGlkSW1nc1t2YXJpYW50XSA/IHZhbGlkSW1nc1t2YXJpYW50XSA6IHZhbGlkSW1nc1tNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiB2YWxpZEltZ3MubGVuZ3RoKV0sICIuc3ZnIik7ZWxzZSB0aGlzLmltZyA9ICIvaW1nL21pbmlHYW1lcy9tZXRhbFBsYW50L2VsZW1lbnRzLyIuY29uY2F0KGludmFsaWRJbWdzW3ZhcmlhbnRdID8gaW52YWxpZEltZ3NbdmFyaWFudF0gOiBpbnZhbGlkSW1nc1tNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBpbnZhbGlkSW1ncy5sZW5ndGgpXSwgIi5zdmciKTsKICAgIH0KICAgIHRoaXMueCA9IDA7CiAgICB0aGlzLnkgPSAwOwogIH0KCiAgX2NyZWF0ZUNsYXNzKEVsZW1lbnQsIFt7CiAgICBrZXk6ICJpbml0UG9zaXRpb25zIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBpbml0UG9zaXRpb25zKHgsIHkpIHsKICAgICAgdGhpcy54ID0geDsKICAgICAgdGhpcy55ID0geTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJpbml0U3BlZWQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGluaXRTcGVlZChtaW4sIG1heCkgewogICAgICB0aGlzLnNwZWVkID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogKG1heCAtIG1pbikgKyBtaW4pOwogICAgfQogIH0sIHsKICAgIGtleTogInVwZGF0ZSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gdXBkYXRlKCkgewogICAgICB0aGlzLnkgKz0gdGhpcy5zcGVlZDsKICAgIH0KICB9XSk7CgogIHJldHVybiBFbGVtZW50Owp9KCk7CgpleHBvcnQgeyBFbGVtZW50IGFzIGRlZmF1bHQgfTs="},{"version":3,"sources":["D:/downloads/UNIQ/Gui/src/store/minigames/metalPlant/Element.js"],"names":["validImgs","invalidImgs","tempImg","bgByType","Element","type","scale","variant","Math","max","random","toFixed","bg","img","floor","length","x","y","min","speed"],"mappings":";;;AAAA,IAAMA,SAAS,GAAG,CACd,KADc,EAEd,SAFc,EAGd,MAHc,CAAlB;AAKA,IAAMC,WAAW,GAAG,CAChB,WADgB,EAEhB,WAFgB,EAGhB,MAHgB,EAIhB,QAJgB,CAApB;AAMA,IAAMC,OAAO,GAAI,aAAjB;AAEA,IAAMC,QAAQ,GAAG;AACb,WAAS,UADI;AAEb,aAAW,QAFE;AAGb,YAAU,YAHG;AAIb,cAAY;AAJC,CAAjB;;IAOqBC,O;AACjB,mBAAYC,IAAZ,EAA4C;AAAA,QAA1BC,KAA0B,uEAAlB,CAAC,CAAiB;AAAA,QAAdC,OAAc,uEAAJ,CAAC,CAAG;;AAAA;;AACxC,SAAKF,IAAL,GAAYA,IAAZ;AACA,SAAKC,KAAL,GAAaA,KAAK,GAAG,CAAR,GAAYE,IAAI,CAACC,GAAL,CAAS,GAAT,EAAcD,IAAI,CAACE,MAAL,KAAgB,GAA9B,EAAmCC,OAAnC,CAA2C,CAA3C,CAAZ,GAA4DL,KAAzE;AACA,SAAKM,EAAL,gDAAgDT,QAAQ,CAACE,IAAD,CAAxD;AACA,QAAG,KAAKA,IAAL,KAAc,QAAd,IAA0B,KAAKA,IAAL,KAAc,UAA3C,EACI,KAAKQ,GAAL,gDAAiDX,OAAjD,UADJ,KAEI;AAEA,UAAG,KAAKG,IAAL,KAAc,OAAjB,EACI,KAAKQ,GAAL,gDAAiDb,SAAS,CAACO,OAAD,CAAT,GAAqBP,SAAS,CAACO,OAAD,CAA9B,GAA0CP,SAAS,CAACQ,IAAI,CAACM,KAAL,CAAWN,IAAI,CAACE,MAAL,KAAgBV,SAAS,CAACe,MAArC,CAAD,CAApG,UADJ,KAGI,KAAKF,GAAL,gDAAiDZ,WAAW,CAACM,OAAD,CAAX,GAAuBN,WAAW,CAACM,OAAD,CAAlC,GAA8CN,WAAW,CAACO,IAAI,CAACM,KAAL,CAAWN,IAAI,CAACE,MAAL,KAAgBT,WAAW,CAACc,MAAvC,CAAD,CAA1G;AACP;AACD,SAAKC,CAAL,GAAS,CAAT;AACA,SAAKC,CAAL,GAAS,CAAT;AACH;;;;kCAEaD,C,EAAGC,C,EAAE;AACf,WAAKD,CAAL,GAASA,CAAT;AACA,WAAKC,CAAL,GAASA,CAAT;AACH;;;8BAESC,G,EAAKT,G,EAAI;AACf,WAAKU,KAAL,GAAaX,IAAI,CAACM,KAAL,CAAYN,IAAI,CAACE,MAAL,MAAiBD,GAAG,GAAGS,GAAvB,CAAD,GAAgCA,GAA3C,CAAb;AACH;;;6BAEO;AACJ,WAAKD,CAAL,IAAU,KAAKE,KAAf;AACH;;;;;;SA7BgBf,O","sourcesContent":["const validImgs = [\r\n    \"eco\",\r\n    \"recycle\",\r\n    \"atom\"\r\n];\r\nconst invalidImgs = [\r\n    \"biohazard\",\r\n    \"radiation\",\r\n    \"pete\",\r\n    \"danger\"\r\n];\r\nconst tempImg =  \"thermometer\";\r\n\r\nconst bgByType = {\r\n    \"valid\": \"green_bg\",\r\n    \"invalid\": \"red_bg\",\r\n    \"tempUp\": \"green_bg_t\",\r\n    \"tempDown\": \"red_bg_t\"\r\n}\r\n\r\nexport default class Element{\r\n    constructor(type, scale = -1, variant = -1) {\r\n        this.type = type;\r\n        this.scale = scale < 0 ? Math.max(.75, Math.random() * 1.5).toFixed(2) : scale;\r\n        this.bg = `/img/miniGames/metalPlant/elements/${bgByType[type]}.svg`;\r\n        if(this.type === \"tempUp\" || this.type === \"tempDown\")\r\n            this.img = `/img/miniGames/metalPlant/elements/${tempImg}.svg`;\r\n        else{\r\n\r\n            if(this.type === \"valid\") \r\n                this.img = `/img/miniGames/metalPlant/elements/${validImgs[variant] ? validImgs[variant] : validImgs[Math.floor(Math.random() * validImgs.length)]}.svg`;\r\n            else\r\n                this.img = `/img/miniGames/metalPlant/elements/${invalidImgs[variant] ? invalidImgs[variant] : invalidImgs[Math.floor(Math.random() * invalidImgs.length)]}.svg`;\r\n        }\r\n        this.x = 0;\r\n        this.y = 0;\r\n    }\r\n\r\n    initPositions(x, y){\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    initSpeed(min, max){\r\n        this.speed = Math.floor((Math.random() * (max - min)) + min);\r\n    }\r\n\r\n    update(){\r\n        this.y += this.speed;\r\n    }\r\n            \r\n}"]}]}