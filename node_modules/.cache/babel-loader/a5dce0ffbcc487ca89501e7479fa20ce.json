{"remainingRequest":"D:\\downloads\\UNIQ\\Gui\\node_modules\\thread-loader\\dist\\cjs.js!D:\\downloads\\UNIQ\\Gui\\node_modules\\babel-loader\\lib\\index.js!D:\\downloads\\UNIQ\\Gui\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\downloads\\UNIQ\\Gui\\src\\store\\arenaMenu\\index.js","dependencies":[{"path":"D:\\downloads\\UNIQ\\Gui\\src\\store\\arenaMenu\\index.js","mtime":1625043595359},{"path":"D:\\downloads\\UNIQ\\Gui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1685190017390},{"path":"D:\\downloads\\UNIQ\\Gui\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1685190017367},{"path":"D:\\downloads\\UNIQ\\Gui\\node_modules\\babel-loader\\lib\\index.js","mtime":1685190019507},{"path":"D:\\downloads\\UNIQ\\Gui\\node_modules\\eslint-loader\\index.js","mtime":1685190018634}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}