{"remainingRequest":"D:\\downloads\\UNIQ\\Gui\\node_modules\\thread-loader\\dist\\cjs.js!D:\\downloads\\UNIQ\\Gui\\node_modules\\babel-loader\\lib\\index.js!D:\\downloads\\UNIQ\\Gui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\downloads\\UNIQ\\Gui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\downloads\\UNIQ\\Gui\\src\\views\\NewDonateShop\\Roulette\\Game.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\downloads\\UNIQ\\Gui\\src\\views\\NewDonateShop\\Roulette\\Game.vue","mtime":1625151238078},{"path":"D:\\downloads\\UNIQ\\Gui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1685190017390},{"path":"D:\\downloads\\UNIQ\\Gui\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1685190017367},{"path":"D:\\downloads\\UNIQ\\Gui\\node_modules\\babel-loader\\lib\\index.js","mtime":1685190019507},{"path":"D:\\downloads\\UNIQ\\Gui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1685190017390},{"path":"D:\\downloads\\UNIQ\\Gui\\node_modules\\vue-loader\\lib\\index.js","mtime":1685190022137}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}