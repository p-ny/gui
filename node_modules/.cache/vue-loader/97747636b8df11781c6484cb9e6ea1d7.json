{"remainingRequest":"D:\\downloads\\UNIQ\\Gui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\downloads\\UNIQ\\Gui\\src\\views\\Minigames\\MetalPlant\\Game.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\downloads\\UNIQ\\Gui\\src\\views\\Minigames\\MetalPlant\\Game.vue","mtime":1635950250773},{"path":"D:\\downloads\\UNIQ\\Gui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1685190017390},{"path":"D:\\downloads\\UNIQ\\Gui\\node_modules\\babel-loader\\lib\\index.js","mtime":1685190019507},{"path":"D:\\downloads\\UNIQ\\Gui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1685190017390},{"path":"D:\\downloads\\UNIQ\\Gui\\node_modules\\vue-loader\\lib\\index.js","mtime":1685190022137}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Game.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuDA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Game.vue","sourceRoot":"src/views/Minigames/MetalPlant","sourcesContent":["<template>\r\n    <div class=\"mplant-game\">\r\n        <div class=\"mplant-game-header\">\r\n            <div class=\"mplant-game-header_lvl\">Lvl.: {{playerLvl}}</div>\r\n            <Element :element=\"invalidElementIcon\" />\r\n            <div class=\"mplant-game-header_count\">{{game.invalid}}</div>\r\n            <Element :element=\"validElementIcon\" />\r\n            <div class=\"mplant-game-header_count\">{{game.valid}}</div>\r\n            <div class=\"mplant-game-header_progress\">\r\n                <div class=\"mplant-game-header_container\">\r\n                    <div class=\"mplant-game-header_thumb\" :style=\"{'left': `${gameProgress}%`}\"></div>\r\n                </div>\r\n            </div>\r\n            <div class=\"mplant-game-header-furnace\">\r\n                <img :src=\"`/img/miniGames/metalPlant/resources/${image(furnace.ore)}.png`\" alt=\"item\" v-if=\"furnace.ore\" class=\"mplant-game-header-furnace_img\"> \r\n                +\r\n                <img :src=\"`/img/miniGames/metalPlant/resources/${image(furnace.fuel)}.png`\" alt=\"item\" v-if=\"furnace.ore\"  class=\"mplant-game-header-furnace_img\">\r\n            </div>\r\n            <div class=\"mplant-game-header_esc\">esc for exit</div>\r\n           \r\n        </div>\r\n        <div class=\"mplant-game_body\">\r\n            <Element \r\n                v-for=\"(element, key, index) in elements\" :key=\"index\" \r\n                :element=\"element\" \r\n                class=\"mplant-game_element\"\r\n                :style=\"{'top': `${element.y}px`, 'left': `${element.x}%`}\"\r\n                :elid=\"key\"\r\n                :hover=\"true\"\r\n            />\r\n            <div class=\"mplant-game_destroy\" v-for=\"(element, index) in destroy\" \r\n                :key=\"`destr_${Math.floor(Math.random() * 10000)+index}`\"\r\n                :style=\"{'width': `${2.5 * element.scale}rem`, 'height': `${2.5 * element.scale}rem`, 'top': `${element.y}px`, 'left': `${element.x}%`}\"\r\n            >\r\n                <img src=\"/img/miniGames/metalPlant/common/destroy.gif\" alt=\"destory\" v-if=\"element.type === 'e'\">\r\n                <div v-else :style=\"{'color': element.type === 'u' ? '#0F0' : '#F00'}\">{{element.type === 'u' ? '+' : '-'}}{{settings.tempElementValue}}</div>\r\n            </div>\r\n            \r\n        </div>\r\n        \r\n        <Horn class=\"mplant-game_horn\"/>\r\n        <svg width=\"62\" height=\"62\" viewBox=\"0 0 62 62\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" class=\"mplant-game_target\" :style=\"{'top': `${mouse.y - this.mouse.offset}px`, 'left': `${mouse.x - this.mouse.offset}px`, 'width': `${mouse.size}px`, 'height': `${mouse.size}px`}\">\r\n            <mask id=\"path-1-outside-1\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"0\" width=\"62\" height=\"62\" fill=\"black\">\r\n                <rect fill=\"white\" width=\"62\" height=\"62\"/>\r\n                <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M29.5085 2.6898C29.5085 3.61919 29.4985 4.4981 29.4862 4.64292C29.4647 4.89708 29.4603 4.9077 29.3591 4.94959C29.3014 4.97346 28.9797 5.01807 28.6441 5.04871C27.3487 5.16695 25.7555 5.43607 24.5932 5.73292C23.7357 5.95193 22.1278 6.4681 21.4068 6.75583C20.9414 6.94153 19.9267 7.40064 19.4007 7.66342C17.3614 8.68247 15.7335 9.77712 13.7797 11.4433C13.2257 11.9157 11.6793 13.4887 11.1148 14.1541C8.64427 17.066 6.81841 20.5572 5.81471 24.2881C5.46783 25.5775 5.18566 27.206 5.05302 28.684C4.99993 29.2752 4.96647 29.4163 4.8683 29.463C4.8382 29.4773 3.95553 29.4945 2.90678 29.5012L1 29.5135V31.0025V32.4915H2.6898C3.61919 32.4915 4.4981 32.5015 4.64292 32.5138C4.89708 32.5353 4.9077 32.5397 4.94959 32.6409C4.97346 32.6986 5.01807 33.0203 5.04871 33.3559C5.19756 34.9864 5.546 36.8523 5.95393 38.2034C6.16498 38.9024 6.5737 40.1161 6.73336 40.518C7.78044 43.1539 9.17915 45.4934 11.085 47.7966C11.7235 48.5682 13.2259 50.0783 14.1069 50.8339C15.3962 51.9397 16.8335 52.9392 18.3103 53.7566C21.6046 55.5803 24.9621 56.6129 28.683 56.9469C29.306 57.0028 29.4153 57.0278 29.4602 57.1245C29.4761 57.1586 29.4945 58.0445 29.5012 59.0932L29.5135 61H31.0025H32.4915V59.3102C32.4915 58.3808 32.5015 57.5019 32.5138 57.3571C32.5353 57.1029 32.5397 57.0923 32.6409 57.0504C32.6986 57.0265 33.0203 56.9819 33.3559 56.9513C34.9864 56.8024 36.8523 56.454 38.2034 56.0461C38.9024 55.835 40.1161 55.4263 40.518 55.2666C43.1539 54.2196 45.4934 52.8208 47.7966 50.915C48.5682 50.2765 50.0783 48.7741 50.8339 47.8931C51.9397 46.6038 52.9392 45.1665 53.7566 43.6897C55.5803 40.3954 56.6129 37.0379 56.9469 33.317C57.0028 32.694 57.0278 32.5847 57.1245 32.5398C57.1586 32.5239 58.0445 32.5055 59.0932 32.4988L61 32.4865V30.9975V29.5085H59.3102C58.3808 29.5085 57.5019 29.4985 57.3571 29.4862C57.1029 29.4647 57.0923 29.4603 57.0504 29.3591C57.0265 29.3014 56.9819 28.9797 56.9513 28.6441C56.8024 27.0136 56.454 25.1477 56.0461 23.7966C55.3808 21.5932 54.7571 20.1088 53.6957 18.2034C52.8837 16.7456 51.8816 15.3334 50.5567 13.7797C50.0843 13.2257 48.5113 11.6793 47.8459 11.1148C44.934 8.64427 41.4428 6.81841 37.7119 5.81471C36.4225 5.46783 34.794 5.18566 33.316 5.05302C32.7248 4.99993 32.5837 4.96647 32.537 4.8683C32.5227 4.8382 32.5055 3.95553 32.4988 2.90678L32.4865 1H30.9975H29.5085V2.6898ZM29.4005 8.92759C29.4279 8.94502 29.4568 9.0779 29.4758 9.27451C29.511 9.63868 29.5144 14.7603 29.4797 15.2149C29.4543 15.5473 29.4136 15.6099 29.2223 15.6105C29.0225 15.611 27.8933 15.8169 27.3729 15.9477C26.7181 16.1122 25.7504 16.4157 25.2373 16.6174C23.8337 17.1694 22.3445 18.0675 21.0339 19.1524C20.5414 19.5602 19.648 20.4545 19.2052 20.9831C18.259 22.1126 17.7241 22.9321 17.0701 24.2542C16.406 25.5968 15.9531 27.06 15.6955 28.6949C15.5805 29.4242 15.5874 29.398 15.4996 29.4482C15.4395 29.4825 14.7754 29.4915 12.3051 29.4915C10.5898 29.4915 9.1301 29.4796 9.06122 29.4649C8.98041 29.4478 8.92837 29.4143 8.91447 29.3704C8.90264 29.3331 8.91102 29.1315 8.93308 28.9225C9.25847 25.8424 10.0403 23.2628 11.4785 20.5242C12.2093 19.1327 13.1546 17.7732 14.3415 16.4068C14.8652 15.8039 16.1383 14.5504 16.7119 14.0728C17.6168 13.3193 18.7571 12.502 19.6628 11.9578C20.8941 11.2178 22.7511 10.3738 24.1186 9.93271C25.4279 9.51037 26.9586 9.17197 28.322 9.00349C29.2281 8.89153 29.3321 8.8842 29.4005 8.92759ZM33.1017 8.93573C36.1656 9.26108 38.7445 10.0442 41.4758 11.4785C43.3702 12.4734 45.1411 13.8116 46.814 15.5125C47.6273 16.3393 48.0557 16.8359 48.7407 17.7458C49.9748 19.3849 50.9096 21.0661 51.6525 22.9831C52.1059 24.1529 52.3978 25.1283 52.6601 26.3503C52.9241 27.5801 53.1553 29.2817 53.0745 29.4005C53.056 29.4276 52.9199 29.457 52.7255 29.4758C52.3613 29.511 47.2397 29.5144 46.7851 29.4797C46.4527 29.4543 46.3901 29.4136 46.3895 29.2223C46.3889 29.0168 46.1813 27.8872 46.049 27.3703C45.736 26.1467 45.4309 25.2872 44.9814 24.3627C44.4449 23.2594 44.071 22.6379 43.4163 21.7607C42.3353 20.3124 40.9235 18.9857 39.4237 18.0086C38.7637 17.5787 37.6561 16.99 36.9748 16.7071C35.8646 16.2461 34.5353 15.8853 33.1418 15.6667C32.8563 15.622 32.6046 15.5673 32.5826 15.5453C32.5108 15.4736 32.4974 14.9555 32.4969 12.2373C32.4963 9.49047 32.5116 8.98322 32.5964 8.92949C32.6579 8.89058 32.6789 8.89081 33.1017 8.93573ZM29.5085 21.6949V24.7627H31H32.4915V21.6949V18.6271H32.564C32.6039 18.6271 32.8213 18.6585 33.0471 18.6968C35.0917 19.0442 37.1379 19.9679 38.7966 21.2925C39.349 21.7336 40.1968 22.5712 40.6217 23.0956C41.8576 24.6213 42.6426 26.1998 43.1347 28.1493C43.2277 28.5175 43.3728 29.3098 43.3729 29.4492C43.3729 29.5052 43.2042 29.5085 40.3051 29.5085H37.2373V31V32.4915H40.3051H43.3729V32.564C43.3729 32.7041 43.2323 33.4617 43.1336 33.854C42.5838 36.0386 41.5992 37.8659 40.0882 39.5058C38.2958 41.4511 35.6514 42.8722 33.0169 43.3059C32.7932 43.3427 32.5835 43.3729 32.5508 43.3729C32.4948 43.3729 32.4915 43.2042 32.4915 40.3051V37.2373H31H29.5085V40.3051V43.3729H29.436C29.3961 43.3729 29.1787 43.3415 28.9529 43.3032C26.9244 42.9585 24.8284 42.0144 23.2373 40.7287C21.0134 38.9316 19.5778 36.6731 18.8653 33.8507C18.7723 33.4825 18.6272 32.6902 18.6271 32.5508C18.6271 32.4948 18.7958 32.4915 21.6949 32.4915H24.7627V31V29.5085H21.6949H18.6271V29.436C18.6271 29.2959 18.7677 28.5383 18.8664 28.146C19.2468 26.6343 19.8041 25.3636 20.6476 24.0847C21.44 22.8833 22.6019 21.6896 23.8188 20.8268C25.2973 19.7785 27.0987 19.0254 28.8814 18.7102C29.1237 18.6674 29.364 18.6312 29.4153 18.6297L29.5085 18.6271V21.6949ZM15.4996 32.5518C15.5865 32.6015 15.5757 32.5567 15.6948 33.3559C15.8297 34.2603 16.1361 35.4246 16.529 36.5254C16.6756 36.9362 17.2478 38.1434 17.5459 38.6712C17.79 39.1033 18.2919 39.8562 18.6494 40.3267C19.9049 41.9792 21.5751 43.4502 23.32 44.4404C25 45.3937 26.6327 45.9654 28.5932 46.287C28.9381 46.3436 29.2693 46.398 29.3292 46.4081C29.4223 46.4237 29.442 46.4446 29.4648 46.5521C29.4996 46.7161 29.4997 52.7749 29.4649 52.9388C29.4478 53.0196 29.4143 53.0716 29.3704 53.0855C29.2155 53.1347 27.4006 52.8877 26.5109 52.6963C25.4994 52.4788 24.5529 52.223 23.8562 51.979C22.6223 51.5469 21.016 50.8173 19.9492 50.2043C19.0058 49.6623 17.6745 48.7272 16.7802 47.9783C16.0419 47.3601 14.756 46.0892 14.1611 45.3898C13.2588 44.329 12.3112 42.9819 11.7008 41.8924C11.4589 41.4608 10.8792 40.3034 10.7019 39.8983C9.80431 37.8477 9.20403 35.5619 8.94946 33.2256C8.89031 32.6829 8.88953 32.6596 8.92858 32.5979C8.98312 32.5119 9.47573 32.4987 12.4576 32.5036C14.7969 32.5075 15.4398 32.5176 15.4996 32.5518ZM52.9904 32.5401C53.1005 32.5789 53.1114 32.656 53.0669 33.0775C52.8805 34.842 52.4804 36.7061 51.9796 38.1438C51.5598 39.3489 50.8151 40.9878 50.2043 42.0508C48.6639 44.732 46.3639 47.2496 43.7571 49.1083C42.1661 50.2426 40.3442 51.1809 38.2857 51.9261C37.5155 52.2049 36.2982 52.5338 35.2712 52.7405C34.3573 52.9245 32.7753 53.1318 32.632 53.0863C32.5961 53.0749 32.5554 53.0241 32.5414 52.9735C32.5074 52.8503 32.4793 47.6234 32.5093 47.0048C32.5357 46.4592 32.5651 46.3901 32.7712 46.3895C32.9821 46.389 34.1052 46.1832 34.6297 46.049C35.869 45.732 36.6962 45.4383 37.6373 44.9811C38.51 44.5571 38.8374 44.3742 39.4576 43.9641C41.2574 42.7743 42.728 41.3066 43.9392 39.4915C44.3932 38.8113 44.9946 37.6931 45.2927 36.9751C45.7561 35.8592 46.1131 34.5418 46.3364 33.1227C46.3831 32.8267 46.4301 32.5755 46.4411 32.5646C46.452 32.5536 46.5861 32.5346 46.7389 32.5223C47.1261 32.4911 52.8981 32.5076 52.9904 32.5401Z\" :fill=\"mouse.currentElement === -1 ? '#fff' : '#f00'\"/>\r\n            </mask>\r\n            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M29.5085 2.6898C29.5085 3.61919 29.4985 4.4981 29.4862 4.64292C29.4647 4.89708 29.4603 4.9077 29.3591 4.94959C29.3014 4.97346 28.9797 5.01807 28.6441 5.04871C27.3487 5.16695 25.7555 5.43607 24.5932 5.73292C23.7357 5.95193 22.1278 6.4681 21.4068 6.75583C20.9414 6.94153 19.9267 7.40064 19.4007 7.66342C17.3614 8.68247 15.7335 9.77712 13.7797 11.4433C13.2257 11.9157 11.6793 13.4887 11.1148 14.1541C8.64427 17.066 6.81841 20.5572 5.81471 24.2881C5.46783 25.5775 5.18566 27.206 5.05302 28.684C4.99993 29.2752 4.96647 29.4163 4.8683 29.463C4.8382 29.4773 3.95553 29.4945 2.90678 29.5012L1 29.5135V31.0025V32.4915H2.6898C3.61919 32.4915 4.4981 32.5015 4.64292 32.5138C4.89708 32.5353 4.9077 32.5397 4.94959 32.6409C4.97346 32.6986 5.01807 33.0203 5.04871 33.3559C5.19756 34.9864 5.546 36.8523 5.95393 38.2034C6.16498 38.9024 6.5737 40.1161 6.73336 40.518C7.78044 43.1539 9.17915 45.4934 11.085 47.7966C11.7235 48.5682 13.2259 50.0783 14.1069 50.8339C15.3962 51.9397 16.8335 52.9392 18.3103 53.7566C21.6046 55.5803 24.9621 56.6129 28.683 56.9469C29.306 57.0028 29.4153 57.0278 29.4602 57.1245C29.4761 57.1586 29.4945 58.0445 29.5012 59.0932L29.5135 61H31.0025H32.4915V59.3102C32.4915 58.3808 32.5015 57.5019 32.5138 57.3571C32.5353 57.1029 32.5397 57.0923 32.6409 57.0504C32.6986 57.0265 33.0203 56.9819 33.3559 56.9513C34.9864 56.8024 36.8523 56.454 38.2034 56.0461C38.9024 55.835 40.1161 55.4263 40.518 55.2666C43.1539 54.2196 45.4934 52.8208 47.7966 50.915C48.5682 50.2765 50.0783 48.7741 50.8339 47.8931C51.9397 46.6038 52.9392 45.1665 53.7566 43.6897C55.5803 40.3954 56.6129 37.0379 56.9469 33.317C57.0028 32.694 57.0278 32.5847 57.1245 32.5398C57.1586 32.5239 58.0445 32.5055 59.0932 32.4988L61 32.4865V30.9975V29.5085H59.3102C58.3808 29.5085 57.5019 29.4985 57.3571 29.4862C57.1029 29.4647 57.0923 29.4603 57.0504 29.3591C57.0265 29.3014 56.9819 28.9797 56.9513 28.6441C56.8024 27.0136 56.454 25.1477 56.0461 23.7966C55.3808 21.5932 54.7571 20.1088 53.6957 18.2034C52.8837 16.7456 51.8816 15.3334 50.5567 13.7797C50.0843 13.2257 48.5113 11.6793 47.8459 11.1148C44.934 8.64427 41.4428 6.81841 37.7119 5.81471C36.4225 5.46783 34.794 5.18566 33.316 5.05302C32.7248 4.99993 32.5837 4.96647 32.537 4.8683C32.5227 4.8382 32.5055 3.95553 32.4988 2.90678L32.4865 1H30.9975H29.5085V2.6898ZM29.4005 8.92759C29.4279 8.94502 29.4568 9.0779 29.4758 9.27451C29.511 9.63868 29.5144 14.7603 29.4797 15.2149C29.4543 15.5473 29.4136 15.6099 29.2223 15.6105C29.0225 15.611 27.8933 15.8169 27.3729 15.9477C26.7181 16.1122 25.7504 16.4157 25.2373 16.6174C23.8337 17.1694 22.3445 18.0675 21.0339 19.1524C20.5414 19.5602 19.648 20.4545 19.2052 20.9831C18.259 22.1126 17.7241 22.9321 17.0701 24.2542C16.406 25.5968 15.9531 27.06 15.6955 28.6949C15.5805 29.4242 15.5874 29.398 15.4996 29.4482C15.4395 29.4825 14.7754 29.4915 12.3051 29.4915C10.5898 29.4915 9.1301 29.4796 9.06122 29.4649C8.98041 29.4478 8.92837 29.4143 8.91447 29.3704C8.90264 29.3331 8.91102 29.1315 8.93308 28.9225C9.25847 25.8424 10.0403 23.2628 11.4785 20.5242C12.2093 19.1327 13.1546 17.7732 14.3415 16.4068C14.8652 15.8039 16.1383 14.5504 16.7119 14.0728C17.6168 13.3193 18.7571 12.502 19.6628 11.9578C20.8941 11.2178 22.7511 10.3738 24.1186 9.93271C25.4279 9.51037 26.9586 9.17197 28.322 9.00349C29.2281 8.89153 29.3321 8.8842 29.4005 8.92759ZM33.1017 8.93573C36.1656 9.26108 38.7445 10.0442 41.4758 11.4785C43.3702 12.4734 45.1411 13.8116 46.814 15.5125C47.6273 16.3393 48.0557 16.8359 48.7407 17.7458C49.9748 19.3849 50.9096 21.0661 51.6525 22.9831C52.1059 24.1529 52.3978 25.1283 52.6601 26.3503C52.9241 27.5801 53.1553 29.2817 53.0745 29.4005C53.056 29.4276 52.9199 29.457 52.7255 29.4758C52.3613 29.511 47.2397 29.5144 46.7851 29.4797C46.4527 29.4543 46.3901 29.4136 46.3895 29.2223C46.3889 29.0168 46.1813 27.8872 46.049 27.3703C45.736 26.1467 45.4309 25.2872 44.9814 24.3627C44.4449 23.2594 44.071 22.6379 43.4163 21.7607C42.3353 20.3124 40.9235 18.9857 39.4237 18.0086C38.7637 17.5787 37.6561 16.99 36.9748 16.7071C35.8646 16.2461 34.5353 15.8853 33.1418 15.6667C32.8563 15.622 32.6046 15.5673 32.5826 15.5453C32.5108 15.4736 32.4974 14.9555 32.4969 12.2373C32.4963 9.49047 32.5116 8.98322 32.5964 8.92949C32.6579 8.89058 32.6789 8.89081 33.1017 8.93573ZM29.5085 21.6949V24.7627H31H32.4915V21.6949V18.6271H32.564C32.6039 18.6271 32.8213 18.6585 33.0471 18.6968C35.0917 19.0442 37.1379 19.9679 38.7966 21.2925C39.349 21.7336 40.1968 22.5712 40.6217 23.0956C41.8576 24.6213 42.6426 26.1998 43.1347 28.1493C43.2277 28.5175 43.3728 29.3098 43.3729 29.4492C43.3729 29.5052 43.2042 29.5085 40.3051 29.5085H37.2373V31V32.4915H40.3051H43.3729V32.564C43.3729 32.7041 43.2323 33.4617 43.1336 33.854C42.5838 36.0386 41.5992 37.8659 40.0882 39.5058C38.2958 41.4511 35.6514 42.8722 33.0169 43.3059C32.7932 43.3427 32.5835 43.3729 32.5508 43.3729C32.4948 43.3729 32.4915 43.2042 32.4915 40.3051V37.2373H31H29.5085V40.3051V43.3729H29.436C29.3961 43.3729 29.1787 43.3415 28.9529 43.3032C26.9244 42.9585 24.8284 42.0144 23.2373 40.7287C21.0134 38.9316 19.5778 36.6731 18.8653 33.8507C18.7723 33.4825 18.6272 32.6902 18.6271 32.5508C18.6271 32.4948 18.7958 32.4915 21.6949 32.4915H24.7627V31V29.5085H21.6949H18.6271V29.436C18.6271 29.2959 18.7677 28.5383 18.8664 28.146C19.2468 26.6343 19.8041 25.3636 20.6476 24.0847C21.44 22.8833 22.6019 21.6896 23.8188 20.8268C25.2973 19.7785 27.0987 19.0254 28.8814 18.7102C29.1237 18.6674 29.364 18.6312 29.4153 18.6297L29.5085 18.6271V21.6949ZM15.4996 32.5518C15.5865 32.6015 15.5757 32.5567 15.6948 33.3559C15.8297 34.2603 16.1361 35.4246 16.529 36.5254C16.6756 36.9362 17.2478 38.1434 17.5459 38.6712C17.79 39.1033 18.2919 39.8562 18.6494 40.3267C19.9049 41.9792 21.5751 43.4502 23.32 44.4404C25 45.3937 26.6327 45.9654 28.5932 46.287C28.9381 46.3436 29.2693 46.398 29.3292 46.4081C29.4223 46.4237 29.442 46.4446 29.4648 46.5521C29.4996 46.7161 29.4997 52.7749 29.4649 52.9388C29.4478 53.0196 29.4143 53.0716 29.3704 53.0855C29.2155 53.1347 27.4006 52.8877 26.5109 52.6963C25.4994 52.4788 24.5529 52.223 23.8562 51.979C22.6223 51.5469 21.016 50.8173 19.9492 50.2043C19.0058 49.6623 17.6745 48.7272 16.7802 47.9783C16.0419 47.3601 14.756 46.0892 14.1611 45.3898C13.2588 44.329 12.3112 42.9819 11.7008 41.8924C11.4589 41.4608 10.8792 40.3034 10.7019 39.8983C9.80431 37.8477 9.20403 35.5619 8.94946 33.2256C8.89031 32.6829 8.88953 32.6596 8.92858 32.5979C8.98312 32.5119 9.47573 32.4987 12.4576 32.5036C14.7969 32.5075 15.4398 32.5176 15.4996 32.5518ZM52.9904 32.5401C53.1005 32.5789 53.1114 32.656 53.0669 33.0775C52.8805 34.842 52.4804 36.7061 51.9796 38.1438C51.5598 39.3489 50.8151 40.9878 50.2043 42.0508C48.6639 44.732 46.3639 47.2496 43.7571 49.1083C42.1661 50.2426 40.3442 51.1809 38.2857 51.9261C37.5155 52.2049 36.2982 52.5338 35.2712 52.7405C34.3573 52.9245 32.7753 53.1318 32.632 53.0863C32.5961 53.0749 32.5554 53.0241 32.5414 52.9735C32.5074 52.8503 32.4793 47.6234 32.5093 47.0048C32.5357 46.4592 32.5651 46.3901 32.7712 46.3895C32.9821 46.389 34.1052 46.1832 34.6297 46.049C35.869 45.732 36.6962 45.4383 37.6373 44.9811C38.51 44.5571 38.8374 44.3742 39.4576 43.9641C41.2574 42.7743 42.728 41.3066 43.9392 39.4915C44.3932 38.8113 44.9946 37.6931 45.2927 36.9751C45.7561 35.8592 46.1131 34.5418 46.3364 33.1227C46.3831 32.8267 46.4301 32.5755 46.4411 32.5646C46.452 32.5536 46.5861 32.5346 46.7389 32.5223C47.1261 32.4911 52.8981 32.5076 52.9904 32.5401Z\" :fill=\"mouse.currentElement === -1  ? '#fff' : '#f00'\"/>\r\n            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M29.5085 2.6898C29.5085 3.61919 29.4985 4.4981 29.4862 4.64292C29.4647 4.89708 29.4603 4.9077 29.3591 4.94959C29.3014 4.97346 28.9797 5.01807 28.6441 5.04871C27.3487 5.16695 25.7555 5.43607 24.5932 5.73292C23.7357 5.95193 22.1278 6.4681 21.4068 6.75583C20.9414 6.94153 19.9267 7.40064 19.4007 7.66342C17.3614 8.68247 15.7335 9.77712 13.7797 11.4433C13.2257 11.9157 11.6793 13.4887 11.1148 14.1541C8.64427 17.066 6.81841 20.5572 5.81471 24.2881C5.46783 25.5775 5.18566 27.206 5.05302 28.684C4.99993 29.2752 4.96647 29.4163 4.8683 29.463C4.8382 29.4773 3.95553 29.4945 2.90678 29.5012L1 29.5135V31.0025V32.4915H2.6898C3.61919 32.4915 4.4981 32.5015 4.64292 32.5138C4.89708 32.5353 4.9077 32.5397 4.94959 32.6409C4.97346 32.6986 5.01807 33.0203 5.04871 33.3559C5.19756 34.9864 5.546 36.8523 5.95393 38.2034C6.16498 38.9024 6.5737 40.1161 6.73336 40.518C7.78044 43.1539 9.17915 45.4934 11.085 47.7966C11.7235 48.5682 13.2259 50.0783 14.1069 50.8339C15.3962 51.9397 16.8335 52.9392 18.3103 53.7566C21.6046 55.5803 24.9621 56.6129 28.683 56.9469C29.306 57.0028 29.4153 57.0278 29.4602 57.1245C29.4761 57.1586 29.4945 58.0445 29.5012 59.0932L29.5135 61H31.0025H32.4915V59.3102C32.4915 58.3808 32.5015 57.5019 32.5138 57.3571C32.5353 57.1029 32.5397 57.0923 32.6409 57.0504C32.6986 57.0265 33.0203 56.9819 33.3559 56.9513C34.9864 56.8024 36.8523 56.454 38.2034 56.0461C38.9024 55.835 40.1161 55.4263 40.518 55.2666C43.1539 54.2196 45.4934 52.8208 47.7966 50.915C48.5682 50.2765 50.0783 48.7741 50.8339 47.8931C51.9397 46.6038 52.9392 45.1665 53.7566 43.6897C55.5803 40.3954 56.6129 37.0379 56.9469 33.317C57.0028 32.694 57.0278 32.5847 57.1245 32.5398C57.1586 32.5239 58.0445 32.5055 59.0932 32.4988L61 32.4865V30.9975V29.5085H59.3102C58.3808 29.5085 57.5019 29.4985 57.3571 29.4862C57.1029 29.4647 57.0923 29.4603 57.0504 29.3591C57.0265 29.3014 56.9819 28.9797 56.9513 28.6441C56.8024 27.0136 56.454 25.1477 56.0461 23.7966C55.3808 21.5932 54.7571 20.1088 53.6957 18.2034C52.8837 16.7456 51.8816 15.3334 50.5567 13.7797C50.0843 13.2257 48.5113 11.6793 47.8459 11.1148C44.934 8.64427 41.4428 6.81841 37.7119 5.81471C36.4225 5.46783 34.794 5.18566 33.316 5.05302C32.7248 4.99993 32.5837 4.96647 32.537 4.8683C32.5227 4.8382 32.5055 3.95553 32.4988 2.90678L32.4865 1H30.9975H29.5085V2.6898ZM29.4005 8.92759C29.4279 8.94502 29.4568 9.0779 29.4758 9.27451C29.511 9.63868 29.5144 14.7603 29.4797 15.2149C29.4543 15.5473 29.4136 15.6099 29.2223 15.6105C29.0225 15.611 27.8933 15.8169 27.3729 15.9477C26.7181 16.1122 25.7504 16.4157 25.2373 16.6174C23.8337 17.1694 22.3445 18.0675 21.0339 19.1524C20.5414 19.5602 19.648 20.4545 19.2052 20.9831C18.259 22.1126 17.7241 22.9321 17.0701 24.2542C16.406 25.5968 15.9531 27.06 15.6955 28.6949C15.5805 29.4242 15.5874 29.398 15.4996 29.4482C15.4395 29.4825 14.7754 29.4915 12.3051 29.4915C10.5898 29.4915 9.1301 29.4796 9.06122 29.4649C8.98041 29.4478 8.92837 29.4143 8.91447 29.3704C8.90264 29.3331 8.91102 29.1315 8.93308 28.9225C9.25847 25.8424 10.0403 23.2628 11.4785 20.5242C12.2093 19.1327 13.1546 17.7732 14.3415 16.4068C14.8652 15.8039 16.1383 14.5504 16.7119 14.0728C17.6168 13.3193 18.7571 12.502 19.6628 11.9578C20.8941 11.2178 22.7511 10.3738 24.1186 9.93271C25.4279 9.51037 26.9586 9.17197 28.322 9.00349C29.2281 8.89153 29.3321 8.8842 29.4005 8.92759ZM33.1017 8.93573C36.1656 9.26108 38.7445 10.0442 41.4758 11.4785C43.3702 12.4734 45.1411 13.8116 46.814 15.5125C47.6273 16.3393 48.0557 16.8359 48.7407 17.7458C49.9748 19.3849 50.9096 21.0661 51.6525 22.9831C52.1059 24.1529 52.3978 25.1283 52.6601 26.3503C52.9241 27.5801 53.1553 29.2817 53.0745 29.4005C53.056 29.4276 52.9199 29.457 52.7255 29.4758C52.3613 29.511 47.2397 29.5144 46.7851 29.4797C46.4527 29.4543 46.3901 29.4136 46.3895 29.2223C46.3889 29.0168 46.1813 27.8872 46.049 27.3703C45.736 26.1467 45.4309 25.2872 44.9814 24.3627C44.4449 23.2594 44.071 22.6379 43.4163 21.7607C42.3353 20.3124 40.9235 18.9857 39.4237 18.0086C38.7637 17.5787 37.6561 16.99 36.9748 16.7071C35.8646 16.2461 34.5353 15.8853 33.1418 15.6667C32.8563 15.622 32.6046 15.5673 32.5826 15.5453C32.5108 15.4736 32.4974 14.9555 32.4969 12.2373C32.4963 9.49047 32.5116 8.98322 32.5964 8.92949C32.6579 8.89058 32.6789 8.89081 33.1017 8.93573ZM29.5085 21.6949V24.7627H31H32.4915V21.6949V18.6271H32.564C32.6039 18.6271 32.8213 18.6585 33.0471 18.6968C35.0917 19.0442 37.1379 19.9679 38.7966 21.2925C39.349 21.7336 40.1968 22.5712 40.6217 23.0956C41.8576 24.6213 42.6426 26.1998 43.1347 28.1493C43.2277 28.5175 43.3728 29.3098 43.3729 29.4492C43.3729 29.5052 43.2042 29.5085 40.3051 29.5085H37.2373V31V32.4915H40.3051H43.3729V32.564C43.3729 32.7041 43.2323 33.4617 43.1336 33.854C42.5838 36.0386 41.5992 37.8659 40.0882 39.5058C38.2958 41.4511 35.6514 42.8722 33.0169 43.3059C32.7932 43.3427 32.5835 43.3729 32.5508 43.3729C32.4948 43.3729 32.4915 43.2042 32.4915 40.3051V37.2373H31H29.5085V40.3051V43.3729H29.436C29.3961 43.3729 29.1787 43.3415 28.9529 43.3032C26.9244 42.9585 24.8284 42.0144 23.2373 40.7287C21.0134 38.9316 19.5778 36.6731 18.8653 33.8507C18.7723 33.4825 18.6272 32.6902 18.6271 32.5508C18.6271 32.4948 18.7958 32.4915 21.6949 32.4915H24.7627V31V29.5085H21.6949H18.6271V29.436C18.6271 29.2959 18.7677 28.5383 18.8664 28.146C19.2468 26.6343 19.8041 25.3636 20.6476 24.0847C21.44 22.8833 22.6019 21.6896 23.8188 20.8268C25.2973 19.7785 27.0987 19.0254 28.8814 18.7102C29.1237 18.6674 29.364 18.6312 29.4153 18.6297L29.5085 18.6271V21.6949ZM15.4996 32.5518C15.5865 32.6015 15.5757 32.5567 15.6948 33.3559C15.8297 34.2603 16.1361 35.4246 16.529 36.5254C16.6756 36.9362 17.2478 38.1434 17.5459 38.6712C17.79 39.1033 18.2919 39.8562 18.6494 40.3267C19.9049 41.9792 21.5751 43.4502 23.32 44.4404C25 45.3937 26.6327 45.9654 28.5932 46.287C28.9381 46.3436 29.2693 46.398 29.3292 46.4081C29.4223 46.4237 29.442 46.4446 29.4648 46.5521C29.4996 46.7161 29.4997 52.7749 29.4649 52.9388C29.4478 53.0196 29.4143 53.0716 29.3704 53.0855C29.2155 53.1347 27.4006 52.8877 26.5109 52.6963C25.4994 52.4788 24.5529 52.223 23.8562 51.979C22.6223 51.5469 21.016 50.8173 19.9492 50.2043C19.0058 49.6623 17.6745 48.7272 16.7802 47.9783C16.0419 47.3601 14.756 46.0892 14.1611 45.3898C13.2588 44.329 12.3112 42.9819 11.7008 41.8924C11.4589 41.4608 10.8792 40.3034 10.7019 39.8983C9.80431 37.8477 9.20403 35.5619 8.94946 33.2256C8.89031 32.6829 8.88953 32.6596 8.92858 32.5979C8.98312 32.5119 9.47573 32.4987 12.4576 32.5036C14.7969 32.5075 15.4398 32.5176 15.4996 32.5518ZM52.9904 32.5401C53.1005 32.5789 53.1114 32.656 53.0669 33.0775C52.8805 34.842 52.4804 36.7061 51.9796 38.1438C51.5598 39.3489 50.8151 40.9878 50.2043 42.0508C48.6639 44.732 46.3639 47.2496 43.7571 49.1083C42.1661 50.2426 40.3442 51.1809 38.2857 51.9261C37.5155 52.2049 36.2982 52.5338 35.2712 52.7405C34.3573 52.9245 32.7753 53.1318 32.632 53.0863C32.5961 53.0749 32.5554 53.0241 32.5414 52.9735C32.5074 52.8503 32.4793 47.6234 32.5093 47.0048C32.5357 46.4592 32.5651 46.3901 32.7712 46.3895C32.9821 46.389 34.1052 46.1832 34.6297 46.049C35.869 45.732 36.6962 45.4383 37.6373 44.9811C38.51 44.5571 38.8374 44.3742 39.4576 43.9641C41.2574 42.7743 42.728 41.3066 43.9392 39.4915C44.3932 38.8113 44.9946 37.6931 45.2927 36.9751C45.7561 35.8592 46.1131 34.5418 46.3364 33.1227C46.3831 32.8267 46.4301 32.5755 46.4411 32.5646C46.452 32.5536 46.5861 32.5346 46.7389 32.5223C47.1261 32.4911 52.8981 32.5076 52.9904 32.5401Z\" stroke=\"black\" stroke-opacity=\"0.15\" stroke-width=\"2\" mask=\"url(#path-1-outside-1)\" :fill=\"mouse.currentElement === -1  ? '#fff' : '#f00'\"/>\r\n        </svg>\r\n\r\n        <!-- <img src=\"img/miniGames/metalPlant/common/target.svg\" alt=\"target\" class=\"mplant-game_target\" :style=\"{'top': `${mouse.y}px`, 'left': `${mouse.x}px`, 'width': `${mouse.size}px`, 'height': `${mouse.size}px`}\"> -->\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapActions, mapGetters, mapMutations, mapState } from 'vuex';\r\nimport Horn from './Horn.vue'\r\nimport Element from './Element.vue'\r\n\r\nexport default {\r\n    computed: {\r\n        ...mapState(\"gameMetalPlant\", [\"preparation\", \"gameBegine\", \"game\", \"settings\", \"elements\", \"invalidElementIcon\", \"validElementIcon\", \"furnace\", \"itemConfigs\"]),\r\n        ...mapGetters(\"gameMetalPlant\", [\"playerLvl\"]),\r\n        gameProgress(){\r\n            return Math.floor(this.invalidDestroyed / this.game.condition * 100) - 100\r\n        },        \r\n    },\r\n    data() {\r\n        return {\r\n            mouse:{\r\n                x: 0,\r\n                y: 0,\r\n                size: 40,\r\n                offset: 0,\r\n                currentElement: -1\r\n            },\r\n            interval:{\r\n                id: 0,\r\n                time: 55\r\n            },\r\n            destroy:[],\r\n            clicks: 0,\r\n            invalidDestroyed: 0,\r\n            allDestroyed: false,\r\n            checker: 0\r\n        }\r\n    },\r\n    methods: {\r\n        ...mapActions(\"gameMetalPlant\", [\"tempElementAction\", \"gameOver\", \"gameWin\", \"createElements\"]),\r\n        ...mapMutations(\"gameMetalPlant\", [\"collectedValid\", \"addInvalid\", \"addValid\",\"updateCoolingBegineState\"]),\r\n        update(){\r\n            if(this.destroy[0] && this.destroy[0].time < Date.now()){\r\n                this.destroy.shift();\r\n            }\r\n\r\n            if(this.allDestroyed){\r\n                if(this.destroy.length < 1){\r\n                    this.gameCompleeted();\r\n                }\r\n            }else if(this.gameBegine && !this.preparation){\r\n                const el = document.elementFromPoint(this.mouse.x, this.mouse.y);\r\n                this.mouse.currentElement = this.getObjectByElement(el);             \r\n                for (const key in this.elements) {\r\n                    this.elements[key].update(); \r\n                    if(key == 0)\r\n                        console.log(this.elements[key].y)\r\n                    if(this.elements[key].y > this.settings.bodyHeight){\r\n                        const el = this.elements[key];\r\n                        delete this.elements[key];\r\n                        this.collectElement(el);\r\n                    }\r\n                }              \r\n            }\r\n        },\r\n        onMouseMove(e){\r\n            this.mouse.x = e.clientX;\r\n            this.mouse.y = e.clientY;\r\n        },\r\n        onMouseDown(){\r\n            if(this.mouse.currentElement === -1) return;\r\n            const el = this.elements[this.mouse.currentElement];\r\n            if(el.type === \"tempUp\"){\r\n                this.tempElementAction(this.settings.tempElementValue);\r\n                this.destroy.push({x: el.x, y: el.y, scale: el.scale, type: \"u\", time: Date.now() + 700});\r\n                this.$store.commit(\"sounds/play\", { name: `metalPlant_tempUp`, volume: 0.1,});\r\n            }\r\n            else if(el.type === \"tempDown\"){\r\n                this.tempElementAction(-this.settings.tempElementValue);\r\n                this.destroy.push({x: el.x, y: el.y, scale: el.scale, type: \"d\", time: Date.now() + 700});\r\n                this.$store.commit(\"sounds/play\", { name: `metalPlant_tempDown`, volume: 0.1,});\r\n            }else {\r\n                if(el.type === \"valid\") \r\n                    this.addInvalid();\r\n                else\r\n                    this.invalidDestroyed++;\r\n                    \r\n                this.destroy.push({x: el.x, y: el.y, scale: el.scale, type: \"e\", time: Date.now() + 700});\r\n                this.$store.commit(\"sounds/play\", { name: `metalPlant_shot`, volume: 0.05,});\r\n            }\r\n            delete this.elements[this.mouse.currentElement];\r\n            this.clicks++;            \r\n            this.preCheck();\r\n        },\r\n        collectElement(el){\r\n            switch (el.type) {\r\n                case \"valid\":\r\n                    this.addValid();\r\n                    break;\r\n                case \"invalid\":\r\n                    this.addInvalid();\r\n                    break;            \r\n                default:\r\n                    break;\r\n            }\r\n            \r\n            if(this.game.valid + this.game.invalid >= this.game.condition){\r\n                this.gameCompleeted();\r\n                return;\r\n            }\r\n            this.preCheck();\r\n            \r\n        },\r\n        preCheck(){ \r\n            if(this.clicks >= this.game.condition){\r\n                const invalidCount = Object.values(this.elements).filter(e=>e.type === \"invalid\").length;\r\n                if(invalidCount === 0){\r\n                    let counter = 0;\r\n                    for (const key in this.elements) {  \r\n                        if(this.elements[key].type === \"valid\"){\r\n                            setTimeout((k)=>{\r\n                                const el = this.elements[k];\r\n                                this.destroy.push({x: el.x, y: el.y, scale: el.scale, type: \"e\", time: Date.now() + 700});\r\n                                delete this.elements[k]; \r\n                            }, 50 * counter, key)     \r\n                            this.addValid();\r\n                            counter++;\r\n                        }\r\n                    }\r\n                    // while (this.game.condition < this.game.valid + this.game.invalid) {\r\n                    //     this.addInvalid();\r\n                    // }\r\n                    this.$store.commit(\"sounds/play\", { name: `metalPlant_boom`, volume: 0.5,});\r\n                    this.allDestroyed = true;\r\n                    this.updateCoolingBegineState(false);\r\n                }\r\n            }\r\n        },\r\n        gameCompleeted(){\r\n            let validPercent = this.game.valid / this.game.condition * 100;\r\n            if(validPercent < 75) \r\n                this.gameOver(1);\r\n            else                               \r\n                this.gameWin(validPercent);            \r\n        },\r\n        getObjectByElement(el){\r\n            if(el === null) return -1;\r\n            return el.getAttribute(\"elid\") || -1;\r\n        },\r\n        initGame(){           \r\n            this.createElements();\r\n            this.interval.id = setInterval(() => {\r\n                this.update();\r\n            }, this.interval.time);\r\n        },\r\n        image(id){\r\n            return this.itemConfigs[id].Image\r\n        }\r\n    },\r\n    components:{\r\n        Horn,\r\n        Element\r\n    },\r\n    mounted(){\r\n        this.mouse.offset = this.mouse.size / 2;        \r\n        this.settings.bodyHeight = document.getElementsByClassName(\"mplant-game_body\")[0].scrollHeight;\r\n        addEventListener(\"mousemove\", this.onMouseMove);\r\n        addEventListener(\"mousedown\", this.onMouseDown);\r\n        this.initGame();        \r\n    },\r\n    beforeDestroy(){\r\n        clearInterval(this.interval.id);\r\n        removeEventListener(\"mousemove\", this.onMouseMove);\r\n        removeEventListener(\"mousedown\", this.onMouseDown);\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n    .mplant-game{\r\n        position: absolute;\r\n        width: 100%;\r\n        height: 100%;\r\n        top: 0;\r\n        left: 0;\r\n        background-color: rgba(0,0,0,.7);\r\n        &-header{\r\n            height: 5rem;\r\n            background-color: rgba(#111, .7);\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n            &_lvl{  \r\n                color: rgba(#fff, .5);\r\n                text-transform: uppercase;\r\n                font-size: 1.2rem;\r\n                margin-right: auto;\r\n                margin-left: 3rem;\r\n            }\r\n            &_esc{  \r\n                color: rgba(#fff, .5);\r\n                text-transform: uppercase;\r\n                font-size: 1.2rem;\r\n                margin-left: auto;\r\n                margin-right: 3rem;\r\n            }\r\n            &_count{\r\n                margin: 0 1rem 0 .3rem;\r\n            }\r\n            &_progress{\r\n                width: 28rem;\r\n                height: 2rem;\r\n                transform: skew(-20deg);\r\n                border: .01rem solid rgba(#fff, .5);\r\n                padding: .3rem;\r\n                margin: 0 5rem;\r\n            }\r\n            &_container{\r\n                width: 27rem;\r\n                height: 1.4rem;\r\n                position: relative;\r\n                overflow: hidden;\r\n            }\r\n            &_thumb{\r\n                width: 100%;\r\n                height: 100%;\r\n                position: absolute;\r\n                background: linear-gradient(90deg, #DCFF00 3.2%, #DCFF00 92.05%, rgba(220, 255, 0, 0) 98.89%);\r\n            }\r\n            &-furnace{\r\n                display: flex;\r\n                align-items: center;\r\n                justify-content: center;\r\n                &_img{\r\n                    width: 3rem;\r\n                    height: 3rem;\r\n                    border: .1rem solid rgba(#fff, .2);\r\n                    background-color: rgba(#000, .5);\r\n                    margin: 0 .5rem;\r\n                }\r\n            }\r\n        }\r\n        &_body{\r\n            //border: 1px solid #fff;\r\n            height: 45rem;\r\n            width: 75%;\r\n            margin: 0 auto;\r\n            position: relative;\r\n            overflow: hidden;\r\n        }\r\n        &_horn{\r\n            position: absolute;\r\n            right: 1rem;\r\n            bottom: 0;\r\n        }\r\n        &_target{\r\n            position: absolute;\r\n            pointer-events: none;            \r\n        }\r\n        &_element{\r\n            position: absolute;\r\n        }\r\n        &_destroy{\r\n            position: absolute;\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n            img{\r\n                width: 100%;\r\n                height: 100%;\r\n            }\r\n        }\r\n    }\r\n</style>"]}]}