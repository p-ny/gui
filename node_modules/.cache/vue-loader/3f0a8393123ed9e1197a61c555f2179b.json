{"remainingRequest":"D:\\downloads\\UNIQ\\Gui\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\downloads\\UNIQ\\Gui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\downloads\\UNIQ\\Gui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\downloads\\UNIQ\\Gui\\src\\views\\HomePurchase\\index.vue?vue&type=template&id=1991733d&scoped=true&","dependencies":[{"path":"D:\\downloads\\UNIQ\\Gui\\src\\views\\HomePurchase\\index.vue","mtime":1639643679387},{"path":"D:\\downloads\\UNIQ\\Gui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1685190017390},{"path":"D:\\downloads\\UNIQ\\Gui\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1685190024316},{"path":"D:\\downloads\\UNIQ\\Gui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1685190017390},{"path":"D:\\downloads\\UNIQ\\Gui\\node_modules\\vue-loader\\lib\\index.js","mtime":1685190022137}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}