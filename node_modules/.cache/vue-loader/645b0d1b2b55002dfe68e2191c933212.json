{"remainingRequest":"D:\\downloads\\UNIQ\\Gui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\downloads\\UNIQ\\Gui\\src\\views\\Hud\\WorkTimer.vue?vue&type=style&index=0&id=28c02db2&lang=scss&scoped=true&","dependencies":[{"path":"D:\\downloads\\UNIQ\\Gui\\src\\views\\Hud\\WorkTimer.vue","mtime":1607203922906},{"path":"D:\\downloads\\UNIQ\\Gui\\node_modules\\css-loader\\dist\\cjs.js","mtime":1685190019100},{"path":"D:\\downloads\\UNIQ\\Gui\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1685190024220},{"path":"D:\\downloads\\UNIQ\\Gui\\node_modules\\postcss-loader\\src\\index.js","mtime":1685190021333},{"path":"D:\\downloads\\UNIQ\\Gui\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1685190017369},{"path":"D:\\downloads\\UNIQ\\Gui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1685190017390},{"path":"D:\\downloads\\UNIQ\\Gui\\node_modules\\vue-loader\\lib\\index.js","mtime":1685190022137}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLndvcmstdGltZXIgew0KICBwb3NpdGlvbjogYWJzb2x1dGU7DQogIGxlZnQ6IDEuNXJlbTsNCiAgYm90dG9tOiAxMS41cmVtOw0KICAmX190ZXh0IHsNCiAgICBjb2xvcjogI2ZmZjsNCiAgICBmb250LXNpemU6IDEuNHJlbTsNCiAgICB0ZXh0LXNoYWRvdzogMCAwIDNweCAjMDAwOw0KICAgIGZvbnQtd2VpZ2h0OiBib2xkOw0KICAgIGxldHRlci1zcGFjaW5nOiAuMDlyZW07DQogIH0NCn0NCg=="},{"version":3,"sources":["WorkTimer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"WorkTimer.vue","sourceRoot":"src/views/Hud","sourcesContent":["<template>\r\n  <div class=\"work-timer\">\r\n    <span class=\"work-timer__text\">{{ prettyTime }}</span>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState, mapMutations } from 'vuex'\r\n\r\nexport default {\r\n  name: 'WorkTimer',\r\n\r\n  data: function() {\r\n    return {\r\n      timer: null\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    ...mapState('hud', ['workTime']),\r\n\r\n    prettyTime () {\r\n      let time = this.workTime / 60\r\n      let minutes = parseInt(time)\r\n      let secondes = Math.round((time - minutes) * 60)\r\n\r\n      if (minutes < 10) {\r\n        minutes = '0'+minutes\r\n      }\r\n      if (secondes < 10) {\r\n        secondes = '0'+secondes\r\n      }\r\n\r\n      return `${minutes}:${secondes}`\r\n\t\t}\r\n  },\r\n\r\n  methods: {\r\n    ...mapMutations('hud', ['startWorkTimer'])\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.work-timer {\r\n  position: absolute;\r\n  left: 1.5rem;\r\n  bottom: 11.5rem;\r\n  &__text {\r\n    color: #fff;\r\n    font-size: 1.4rem;\r\n    text-shadow: 0 0 3px #000;\r\n    font-weight: bold;\r\n    letter-spacing: .09rem;\r\n  }\r\n}\r\n</style>\r\n"]}]}