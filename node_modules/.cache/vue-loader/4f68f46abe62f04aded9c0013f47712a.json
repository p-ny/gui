{"remainingRequest":"C:\\gta go\\Gui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\gta go\\Gui\\src\\views\\Inventory\\index.vue?vue&type=style&index=0&id=eca0b8d6&lang=scss&scoped=true&","dependencies":[{"path":"C:\\gta go\\Gui\\src\\views\\Inventory\\index.vue","mtime":1642054941723},{"path":"C:\\gta go\\Gui\\node_modules\\css-loader\\dist\\cjs.js","mtime":1685190019100},{"path":"C:\\gta go\\Gui\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1685190024220},{"path":"C:\\gta go\\Gui\\node_modules\\postcss-loader\\src\\index.js","mtime":1685190021333},{"path":"C:\\gta go\\Gui\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1685190017369},{"path":"C:\\gta go\\Gui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1685190017390},{"path":"C:\\gta go\\Gui\\node_modules\\vue-loader\\lib\\index.js","mtime":1685190022137}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLmludnsNCiAgICBwb3NpdGlvbjogYWJzb2x1dGU7DQogICAgdG9wOiAwOw0KICAgIGxlZnQ6IDA7DQogICAgd2lkdGg6IDEwMHZ3Ow0KICAgIGhlaWdodDogMTAwdmg7DQogICAgYmFja2dyb3VuZDogdXJsKC9pbWcvaW52ZW50b3J5L2NvbW1vbi9iZy5wbmcpIG5vLXJlcGVhdCBjZW50ZXI7DQogICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjsNCiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOw0KICAgIGZvbnQtc3R5bGU6IG5vcm1hbDsNCiAgICBmb250LXdlaWdodDogMzAwOw0KICAgIGZvbnQtc2l6ZTogLjlyZW07DQogICAgbGluZS1oZWlnaHQ6IDEuMnJlbTsNCiAgICBsZXR0ZXItc3BhY2luZzogLjAzcmVtOw0KICAgICYtZHJvcHsNCiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgjMDAwLCAuMyk7DQogICAgICAgIGhlaWdodDogMTAwJTsNCiAgICAgICAgd2lkdGg6IDQuNXJlbTsNCiAgICAgICAgZGlzcGxheTogZmxleDsNCiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjsNCiAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0Ow0KICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOw0KICAgICAgICAmLXRpdHRsZXsNCiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7DQogICAgICAgICAgICBmb250LXNpemU6IDEuMnJlbTsNCiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxLjQ1cmVtOw0KICAgICAgICAgICAgbGV0dGVyLXNwYWNpbmc6IDAuMDZyZW07DQogICAgICAgICAgICBjb2xvcjogcmdiYSgjZmZmLCAuMik7DQogICAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOw0KICAgICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoLTkwZGVnKTsNCiAgICAgICAgICAgIHdpZHRoOiAxMnJlbTsNCiAgICAgICAgICAgIG1hcmdpbjogNi41cmVtIDA7DQogICAgICAgIH0NCiAgICB9DQogICAgJi1jb250YWluZXJ7DQogICAgICAgIHdpZHRoOiAxMDAlOw0KICAgICAgICBtYXJnaW46IDAgYXV0bzsNCiAgICAgICAgaGVpZ2h0OiAxMDAlOw0KICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7DQogICAgICAgIGRpc3BsYXk6IGZsZXg7DQogICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsNCiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjsNCiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjsNCiAgICAgICAgJi1sb2dvew0KICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlOw0KICAgICAgICAgICAgcmlnaHQ6IC0xMXJlbTsNCiAgICAgICAgICAgIHRvcDogLTVyZW07DQogICAgICAgICAgICB6LWluZGV4OiAtMTsNCiAgICAgICAgfQ0KICAgIH0NCiAgICAmLW1haW57DQogICAgICAgIGhlaWdodDogMTAwJTsNCiAgICAgICAgd2lkdGg6IDk2cmVtOw0KICAgIH0NCiAgICAmLWxpbmV7IA0KICAgICAgICBtYXJnaW46IDEuMDVyZW0gYXV0byAwOw0KICAgICAgICBib3JkZXItdG9wOiAxcHggc29saWQgcmdiYSgjRkZGLCAuMSk7DQogICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCByZ2JhKCNGRjMzODAsIC41KTsNCiAgICAgICAgaGVpZ2h0OiA3cHg7DQogICAgICAgIHdpZHRoOiA4MXJlbTsNCiAgICB9DQogICAgJi1wYXJ0c3sNCiAgICAgICAgbWFyZ2luOiAzLjVyZW0gYXV0byAwOw0KICAgICAgICB3aWR0aDogODNyZW07DQogICAgICAgIGRpc3BsYXk6IGZsZXg7DQogICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsNCiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjsNCiAgICAgICAgaGVpZ2h0OiAzOXJlbTsgDQogICAgICAgICYtbG9nb3sNCiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsNCiAgICAgICAgICAgIHJpZ2h0OiAtMTFyZW07DQogICAgICAgICAgICB0b3A6IC01cmVtOw0KICAgICAgICAgICAgei1pbmRleDogLTE7DQogICAgICAgIH0NCiAgICB9DQp9DQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/Inventory","sourcesContent":["<template>\r\n    <div class=\"inv\" id=\"drop\" adress=\"out\">\r\n        <div class=\"inv-container\">\r\n            <div class=\"inv-drop\">\r\n                <div class=\"inv-drop-tittle\">{{loc(\"inv_drop_item\")}}</div>\r\n                <img src=\"/img/inventory/common/drop.svg\" alt=\"drop\" class=\"inv-drop-img\">\r\n            </div>\r\n            <div class=\"inv-main\">\r\n                <div class=\"inv-line\"></div>\r\n                <div class=\"inv-parts\">                   \r\n                    <img src=\"/img/inventory/common/logo.png\" alt=\"logo\" class=\"inv-parts-logo\">\r\n                    <NearItems\r\n                        :drag=\"dragObject\" \r\n                        @onMouseDown=\"onMouseDown\" \r\n                        @onDoubleClick=\"onDoubleClick\"\r\n                    />    \r\n                    <Personal\r\n                        :drag=\"dragObject\" \r\n                        @onMouseDown=\"onMouseDown\"\r\n                        @onDoubleClick=\"onDoubleClick\"\r\n                    />\r\n                    <Dynamic \r\n                        :darag=\"dragObject\" \r\n                        @onMouseDown=\"onMouseDown\"\r\n                        @onDoubleClick=\"onDoubleClick\"\r\n                    />\r\n                </div>  \r\n                <FastAccess \r\n                    :drag=\"dragObject\"\r\n                    @onMouseDown=\"onMouseDown\"\r\n                />\r\n            </div>\r\n                      \r\n        </div>\r\n        <Other \r\n            v-for=\"(other, key) in otherInventories\"\r\n            :id=\"key\"   \r\n            :name=\"other\"    \r\n            :key=\"key\"\r\n            :drag=\"dragObject\" \r\n            @onMouseDown=\"onMouseDown\"\r\n            @onDoubleClick=\"onDoubleClick\"\r\n        />\r\n        <Avatar :drag=\"dragObject\" />\r\n        <Tooltip :tooltip=\"tooltip\" v-if=\"tooltip.show\"/>\r\n        <Split \r\n            :from=\"split.from\" \r\n            :to=\"split.to\" \r\n            :item=\"split.item\"\r\n            @onSplitClose=\"split.close()\" \r\n            @onSpliteMove=\"splitMove\"\r\n        />\r\n        <Confirm \r\n            :msg=\"confirm.msg\" \r\n            v-if=\"confirm.show\" \r\n            @confirmAction=\"confirmAction\" \r\n        />\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport Personal from './Personal'\r\nimport Avatar from './Avatar'\r\nimport Dynamic from './Dynamic'\r\nimport Other from './OtherInventory'\r\nimport Split from './SplitDialog'\r\nimport NearItems from './NearItems'\r\nimport FastAccess from './FastAccess'\r\nimport Tooltip from './Tooltip'\r\nimport Confirm from './Confirmation'\r\n\r\nimport {mapState, mapGetters} from 'vuex'\r\n\r\nexport default { \r\n    computed: {\r\n        ...mapState('inventory', ['otherInventories', 'equip', 'personalId', 'stock']),\r\n        ...mapGetters('inventory', ['getById']),\r\n        ...mapGetters('localization', ['loc'])\r\n    },\r\n    data() {\r\n        return {\r\n            dragObject: null,\r\n            spamPotection: 0,\r\n            spamPotectionTime: 700,\r\n            tooltip: {\r\n                x: 500,\r\n                y: 500,\r\n                el: null,\r\n                timer: 0,\r\n                item: null,\r\n                show: true\r\n            },\r\n            split: {\r\n                from: undefined,\r\n                to: undefined,\r\n                close(){\r\n                    this.from = undefined;\r\n                    this.to = undefined;\r\n                },\r\n            },\r\n            confirm:{\r\n                msg: \"inv_confirm_drop\",\r\n                callback: null,\r\n                show: false,\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        //events\r\n        onMouseDown(dragObject){\r\n            dragObject.store = this.$store;\r\n            this.dragObject = dragObject;\r\n            this.tooltip.show = false;\r\n        },\r\n        onDoubleClick(adress, item){\r\n            if(item == null || this.spamPotection > Date.now()) return;\r\n            this.spamPotection = Date.now() + this.spamPotectionTime;\r\n            if(item.isBackpack() || item.isKeyRing()){\r\n                this.$store.commit(\"inventory/openOther\", item);\r\n            } else if (item.isItemBox()){\r\n                const split = adress.split('_');\r\n                if(split[0] == \"inv\")\r\n                    window.mp.triggerServer(\"inv:use:itembox\", split[1], split[2]);\r\n            } else if(item.isUsable()){\r\n                const split = adress.split('_');\r\n                if(split[0] == \"inv\" && this.personalId == split[1]){\r\n                    window.mp.trigger(\"inv:use:item\", split[2]);                    \r\n                    window.mp.trigger(\"gui:inv:close\");\r\n                }                    \r\n            }\r\n            else if(item.isWeapon()){\r\n                let freeSlot = -1;\r\n                item.config.Slots.forEach(slot=>{\r\n                    if(!this.equip.weapons[slot]){\r\n                        freeSlot = slot;\r\n                        return;\r\n                    }\r\n                })\r\n                if(freeSlot !== -1){\r\n                    const split = adress.split('_');\r\n                    if(split[0] == \"inv\" && this.personalId == split[1])\r\n                        window.mp.triggerServer(\"equip:equip\", split[1], split[2], freeSlot)\r\n                }\r\n            } else if(item.isMask()){\r\n                if(!this.equip.clothes[1]){\r\n                    const split = adress.split('_');\r\n                    if(split[0] == \"inv\" && this.personalId == split[1])\r\n                        window.mp.triggerServer(\"equip:equip\", split[1], split[2], 1)\r\n                }                \r\n            }\r\n                \r\n        },\r\n        onMousemove(e){\r\n            if(this.dragObject == null) {\r\n                const el = document.elementFromPoint(e.clientX, e.clientY);\r\n                if(this.tooltip.el == el) return;\r\n                this.tooltip.el = el;\r\n                if(this.tooltip.el == null){\r\n                    this.tooltip.show = false;\r\n                }else{\r\n                    if(el.id == \"drop\"){\r\n                         const adress = el.getAttribute(\"adress\").split('_');\r\n                        if(adress[0]==\"out\")\r\n                            this.tooltip.show = false;\r\n                        else{\r\n                            if(adress[0] == \"eq\"){\r\n                                this.tooltip.item = adress[1] == 1 ? this.equip.weapons[adress[2]] : this.equip.clothes[adress[2]]\r\n                            }else if(adress[0] == \"inv\"){\r\n                                this.tooltip.item = this.getById(adress[1]).items.find(i=>i.index == adress[2]);\r\n                            }else this.tooltip.item = null;\r\n                            if(this.tooltip.item){\r\n                                this.tooltip.timer = setTimeout((el)=>{\r\n                                    if(this.dragObject == null && this.tooltip.el === el){\r\n                                        const pos = this.tooltip.el.getBoundingClientRect();\r\n                                        this.tooltip.x = pos.x;\r\n                                        this.tooltip.y = pos.y + pos.height;\r\n                                        this.tooltip.show = true;\r\n                                    }\r\n                                    \r\n                                },1000, this.tooltip.el)\r\n                            }else this.tooltip.show = false;\r\n                        }\r\n                        \r\n                    }else this.tooltip.show = false;\r\n                }\r\n            }else this.dragObject.mouseMoveHandle(e);\r\n        },\r\n        onMouseRelease(e){\r\n            if(this.dragObject == null) return;\r\n            if(!this.dragObject.dragStart) {\r\n                this.deleteDragObject();\r\n            }else{\r\n                this.$store.commit(\"inventory/closeOther\", this.dragObject.item.inventoryId);\r\n                this.mouseReleaseHandler(e);\r\n                this.deleteDragObject();\r\n            }\r\n        },\r\n        onKeyDown(e){\r\n            if(this.dragObject !== null && this.dragObject.item.isStackable() && this.dragObject.item.count > 1 && !this.dragObject.alt && e.keyCode === 17)\r\n                this.dragObject.alt = true;\r\n        },\r\n        onKeyUp(e){\r\n            if(this.dragObject !== null && this.dragObject.alt && e.keyCode === 17)\r\n                this.dragObject.alt = false;\r\n        },\r\n\r\n        //handlers        \r\n        mouseReleaseHandler(){\r\n            if(this.dragObject.overAdress  == null) return;           \r\n            if(this.dragObject.overAdress == this.dragObject.adress) return;\r\n            if(this.spamPotection > Date.now()) return;\r\n            this.spamPotection = Date.now() + this.spamPotectionTime;     \r\n            const to = this.dragObject.overAdress.split('_');\r\n            const from = this.dragObject.adress.split('_');\r\n            const toType = to[0];\r\n            if(from[0] == \"access\" && from[0] !== toType){\r\n                this.$store.commit(\"inventory/resetFastAccessButton\", from[1]);\r\n            } else if(toType == \"access\"){\r\n                this.$store.commit(\"inventory/setFastAccessButton\", {key: to[1], from});\r\n            } else if(toType == \"out\"){\r\n                if(from[1] == 0) return;\r\n                if(this.dragObject.alt){\r\n                    this.split.from = from;\r\n                    this.split.to = to;\r\n                    this.split.item = this.dragObject.item;\r\n                }else\r\n                    this.dropItem(from, this.dragObject.item.count);\r\n            }else if(toType == \"eq\"){\r\n                if(!this.dragObject.item.isEquipable() || !this.dragObject.item.isSlotValid(to[2])) return;\r\n                this.toEquip(from, to)\r\n            }else if(toType == \"inv\"){\r\n                if(this.dragObject.alt){\r\n                    this.split.from = from;\r\n                    this.split.to = to;\r\n                    this.split.item = this.dragObject.item;\r\n                }else{\r\n                    const count = this.dragObject.item.count;\r\n                    if(this.isCanMove(from, to, count))\r\n                        this.toInventory(from, to, count)\r\n                }\r\n            }\r\n        },\r\n        isCanMove(from, to, count){\r\n            //from\r\n            const fromType = from[0];\r\n            const fromId = from[1];\r\n            const fromIndex = from[2];\r\n            //to\r\n            const toType = to[0];\r\n            const toId = to[1];\r\n            const toIndex = to[2];\r\n\r\n            let fromItem;\r\n            if(fromType == \"inv\"){\r\n                const fromInventory = this.getById(fromId);\r\n                if(fromInventory == undefined) return false;\r\n                fromItem = fromId == 0 ? fromInventory.items[fromIndex] : fromInventory.items.find(i=>i.index == fromIndex);\r\n            }else if(fromType == \"eq\"){\r\n                if(fromId == 1) fromItem = this.equip.weapons[fromIndex];\r\n                else fromItem = this.equip.clothes[fromIndex];\r\n            }\r\n            if(fromItem == undefined) return false;\r\n            if(fromItem.count < count){\r\n                window.setData('notifyList/notify', {type: 1, position:2, message: \"inv_wrong_count\", time: 3000});\r\n                return false;\r\n            }\r\n            if(toType == \"eq\") return false;\r\n            const toInventory = this.getById(toId);\r\n            const exists = toInventory.items.find(i=>i.index == toIndex);\r\n            if(exists !== undefined && (!exists.isStackable() || exists.id != fromItem.id)) return false;\r\n            if(toId == 0 || toId == fromId) return true;\r\n            if(toInventory == undefined) return false;\r\n            let weight = 0;\r\n            toInventory.items.forEach(item => {\r\n                weight += item.getWeight();\r\n            });\r\n            weight += fromItem.getWeight();\r\n            if(weight >  toInventory.maxWeight){\r\n                 window.setData('notifyList/notify', {type: 1, position:2, message: \"inv_wrong_weight\", time: 3000});\r\n                return false;\r\n            }\r\n            return true;\r\n        },    \r\n        confirmAction(result){\r\n            if(result && this.confirm.callback !== null) this.confirm.callback();\r\n            this.confirm.callback = null;\r\n            this.confirm.show = false;\r\n        },\r\n        //actions\r\n        deleteDragObject(){\r\n            this.dragObject = null;\r\n        },\r\n        splitMove(count){\r\n            if(this.split.to[0] == \"out\")\r\n                this.dropItem(this.split.from, count);\r\n            else if(this.isCanMove(this.split.from, this.split.to, count))\r\n                this.toInventory( this.split.from, this.split.to, count);\r\n            this.split.close();\r\n        },  \r\n        toInventory(from, to, count){\r\n            if(to[1] == 0) return;            \r\n            if(from[0] == \"eq\"){\r\n                const item = from[1] == 1 ? this.equip.weapons[from[2]] : this.equip.clothes[from[2]];\r\n                if(item == null || (item.promo && to[1] != this.personalId)){\r\n                    this.confirm.msg = \"inv_confirm_nomove\"\r\n                    this.confirm.callback = null;\r\n                    this.confirm.show = true;\r\n                    return;\r\n                }\r\n                window.mp.triggerServer(\"equip:remove\", from[1], from[2], to[1], to[2]);\r\n            }                \r\n            else if(from[0] == \"inv\"){\r\n                if(from[1] == 0){\r\n                    const item = this.getById(0).items[from[2]];\r\n                    if(item === undefined) return;\r\n                    if(this.stock.id == to[1] && this.stock.type == 3 && !item.isEquipClothes())\r\n                         window.setData('notifyList/notify', {type: 1, position:2, message: \"inv_msg_cloth_only\", time: 3000});\r\n                    else \r\n                        window.mp.triggerServer(\"inv:pickup\", item.index, to[1], to[2], count);\r\n                }else{\r\n                    const item = this.getById(from[1]).items.find(i=>i.index == from[2]);\r\n                    if(item === undefined) return;\r\n                    if(item.promo && to[1] != this.personalId){\r\n                        this.confirm.msg = \"inv_confirm_nomove\"\r\n                        this.confirm.callback = null;\r\n                        this.confirm.show = true;\r\n                        return;\r\n                    }\r\n                    if(this.stock.id == to[1] && this.stock.type == 3 && !item.isEquipClothes())\r\n                         window.setData('notifyList/notify', {type: 1, position:2, message: \"inv_msg_cloth_only\", time: 3000});\r\n                    else \r\n                    window.mp.triggerServer(\"inv:moveItem\", from[1], from[2], to[1], to[2], count);\r\n                }\r\n                    \r\n            }\r\n        },        \r\n        dropItem(from, count){\r\n            if(from[0] === \"eq\"){\r\n                const item = from[1] == 1 ? this.equip.weapons[from[2]] : this.equip.clothes[from[2]];\r\n                if(item.promo){\r\n                    this.confirm.callback = ()=>{\r\n                        window.mp.triggerServer(\"equip:drop\", from[1], from[2]);\r\n                    };\r\n                    this.confirm.msg = \"inv_confirm_drop\";\r\n                    this.confirm.show = true;\r\n                }else\r\n                    window.mp.triggerServer(\"equip:drop\", from[1], from[2]);\r\n            }\r\n            else if(from[0] === \"inv\"){\r\n                const item = this.getById(from[1]).items.find(i=>i.index == from[2]);\r\n                if(item.promo){\r\n                    this.confirm.callback = ()=>{\r\n                        window.mp.triggerServer(\"inv:drop\", from[1], from[2], count);\r\n                    };\r\n                    this.confirm.msg = \"inv_confirm_drop\";\r\n                    this.confirm.show = true;\r\n                }else\r\n                    window.mp.triggerServer(\"inv:drop\", from[1], from[2], count);\r\n            }\r\n        },\r\n        toEquip(from, to){\r\n             if(from[0] == \"eq\"){\r\n                window.mp.triggerServer(\"equip:move\", from[1],from[2], to[2])\r\n            }else if(from[0] == \"inv\"){\r\n                if(from[1] == 0){\r\n                    const item = this.getById(0).items[from[2]];\r\n                    if(item === undefined) return;\r\n                    window.mp.triggerServer(\"equip:pickup\", item.index, to[2]);\r\n                } else \r\n                    window.mp.triggerServer(\"equip:equip\", from[1], from[2], to[2]);\r\n            }\r\n        },\r\n\r\n        //dev\r\n        setDevMod(){\r\n            this.$store.commit('inventory/updateEquip', {type: 2, slot: 8, item:[10,1,-1, 0]});\r\n            this.$store.commit('inventory/updateEquip', {type: 2, slot: 14, item:[5,1,23, 1, 11968,10]});\r\n            this.$store.commit('inventory/updateEquip',  {type: 1, slot: 1, item:[76,1,-1, 1, 11423123]});\r\n            this.$store.commit('inventory/setPersonalId', 1);\r\n            this.$store.commit('inventory/update', {\r\n                id: 1,\r\n                maxWeight: 40000,\r\n                size: 36,\r\n                items: [[23,1,1,0],[13, 1, 2, 1],[76, 1, 13, 0],[18, 15, 5, 1],[5, 1, 7, 0, 2, 5000], [1, 1, 4, 0, 2, 5000]]\r\n            });\r\n            this.$store.commit('inventory/update', {\r\n                id: 2,\r\n                maxWeight: 50000,\r\n                size: 50,\r\n                items:[[7, 1, 1, 1],[1, 5, 4, 0],[10, 2, 14, 1],[4, 1, 12, 0]]\r\n            });\r\n            this.$store.commit('inventory/setStock', {\"id\": 1,\"type\": 3});\r\n            this.$store.commit('inventory/setDynamic', 'Equip');\r\n            this.$store.commit('inventory/update', {id:0, items:[[7,1,12, 1],[7,1,12, 1]], maxWeight: -1, size: 2});\r\n            //this.$store.commit(\"inventory/setFastAccessData\", {\"1\": {type: \"eq\", id: 1}, \"2\": {type: \"eq\", id: 2}, \"3\": {type: \"eq\", id: 3}, \"4\": {type: \"eq\", id: 4}, \"5\": null, \"6\": null, \"7\": null, \"8\": null, \"9\": null, \"10\": null});\r\n        }\r\n    },\r\n    mounted() {\r\n        document.addEventListener( \"keydown\", this.onKeyDown);\r\n        document.addEventListener( \"keyup\", this.onKeyUp);\r\n        document.addEventListener(\"mouseup\", this.onMouseRelease);\r\n        document.addEventListener(\"mousemove\", this.onMousemove);\r\n        if(process.env.NODE_ENV == 'development') this.setDevMod();\r\n    },\r\n    beforeDestroy(){\r\n        document.removeEventListener( \"keydown\", this.onKeyDown);\r\n        document.removeEventListener( \"keyup\", this.onKeyUp);\r\n        document.removeEventListener(\"mouseup\", this.onMouseRelease);\r\n        document.removeEventListener(\"mousemove\", this.onMousemove);\r\n    },\r\n    components:{\r\n        Personal,\r\n        Avatar,\r\n        Dynamic,\r\n        Other,\r\n        Split,\r\n        NearItems,\r\n        FastAccess,\r\n        Tooltip,\r\n        Confirm\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.inv{\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    background: url(/img/inventory/common/bg.png) no-repeat center;\r\n    background-size: cover;\r\n    text-transform: uppercase;\r\n    font-style: normal;\r\n    font-weight: 300;\r\n    font-size: .9rem;\r\n    line-height: 1.2rem;\r\n    letter-spacing: .03rem;\r\n    &-drop{\r\n        background-color: rgba(#000, .3);\r\n        height: 100%;\r\n        width: 4.5rem;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: flex-start;\r\n        flex-direction: column;\r\n        &-tittle{\r\n            font-weight: 400;\r\n            font-size: 1.2rem;\r\n            line-height: 1.45rem;\r\n            letter-spacing: 0.06rem;\r\n            color: rgba(#fff, .2);\r\n            text-transform: uppercase;\r\n            transform: rotate(-90deg);\r\n            width: 12rem;\r\n            margin: 6.5rem 0;\r\n        }\r\n    }\r\n    &-container{\r\n        width: 100%;\r\n        margin: 0 auto;\r\n        height: 100%;\r\n        position: relative;\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        overflow: hidden;\r\n        &-logo{\r\n            position: absolute;\r\n            right: -11rem;\r\n            top: -5rem;\r\n            z-index: -1;\r\n        }\r\n    }\r\n    &-main{\r\n        height: 100%;\r\n        width: 96rem;\r\n    }\r\n    &-line{ \r\n        margin: 1.05rem auto 0;\r\n        border-top: 1px solid rgba(#FFF, .1);\r\n        border-bottom: 1px solid rgba(#FF3380, .5);\r\n        height: 7px;\r\n        width: 81rem;\r\n    }\r\n    &-parts{\r\n        margin: 3.5rem auto 0;\r\n        width: 83rem;\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        height: 39rem; \r\n        &-logo{\r\n            position: absolute;\r\n            right: -11rem;\r\n            top: -5rem;\r\n            z-index: -1;\r\n        }\r\n    }\r\n}\r\n</style>"]}]}